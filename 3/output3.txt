class Shape:
    def calculate_area(self):
        pass

class Circle(Shape):
    def calculate_area(self):
        radius = float(input("Enter the radius of the circle: "))
        area = 3.14 * radius * radius
        print("Area:", area)

class Rectangle(Shape):
    def calculate_area(self):
        length = float(input("Enter the length of the rectangle: "))
        width = float(input("Enter the width of the rectangle: "))
        area = length * width
        print("Area:", area)

class Triangle(Shape):
    def calculate_area(self):
        base = float(input("Enter the base of the triangle: "))
        height = float(input("Enter the height of the triangle: "))
        area = 0.5 * base * height
        print("Area:", area)

# Create class instance
def main():
    shape_type = input("Enter the type of shape (circle, rectangle, triangle): ")
    if shape_type == "circle":
        shape = Circle()
    elif shape_type == "rectangle":
        shape = Rectangle()
    elif shape_type == "triangle":
        shape = Triangle()
    else:
        print("Unknown shape type")
        return
    shape.calculate_area()





class ShapeCalculator:
    def calculate_area(self, shape_type):
        getattr(self, f'calculate_{shape_type}_area')()

    def calculate_circle_area(self):
        radius = float(input("Enter the radius of the circle: "))
        area = 3.14 * radius * radius
        print("Area:", area)

    def calculate_rectangle_area(self):
        length = float(input("Enter the length of the rectangle: "))
        width = float(input("Enter the width of the rectangle: "))
        area = length * width
        print("Area:", area)

    def calculate_triangle_area(self):
        base = float(input("Enter the base of the triangle: "))
        height = float(input("Enter the height of the triangle: "))
        area = 0.5 * base * height
        print("Area:", area)

# An example on how to use the class
calculator = ShapeCalculator()
calculator.calculate_area("circle")
